<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-08-20T18:27:36+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">개발 블로그</title><subtitle>코딩하면서 공부하는 블로그입니다.</subtitle><author><name>Nari-Lee</name></author><entry><title type="html">MyBatis</title><link href="http://localhost:4000/study/MyBatis/" rel="alternate" type="text/html" title="MyBatis" /><published>2024-08-20T00:00:00+09:00</published><updated>2024-08-21T09:22:00+09:00</updated><id>http://localhost:4000/study/MyBatis</id><content type="html" xml:base="http://localhost:4000/study/MyBatis/"><![CDATA[<p>MyBatis는 자바 퍼시스턴스 프레임워크로, 데이터베이스 프로그래밍을 간소화하고 SQL, 저장프로시저 그리고 몇가지 고급 매핑을 지원한다.</p>

<h2 id="1-주요-특징">1. 주요 특징</h2>

<ul>
  <li></li>
</ul>]]></content><author><name>Nari-Lee</name></author><category term="Study" /><category term="Study" /><category term="Java" /><category term="SQL" /><category term="MyBatis" /><summary type="html"><![CDATA[MyBatis에 대하여]]></summary></entry><entry><title type="html">JDBC(Java Database Connectivity)</title><link href="http://localhost:4000/study/JDBC/" rel="alternate" type="text/html" title="JDBC(Java Database Connectivity)" /><published>2024-08-16T00:00:00+09:00</published><updated>2024-08-17T09:22:00+09:00</updated><id>http://localhost:4000/study/JDBC</id><content type="html" xml:base="http://localhost:4000/study/JDBC/"><![CDATA[<p>JDBC(Java Database Connectivity)는 Java 애플리케이션에서 데이터베이스에 접근할 수 있게 해주는 Java API이다. 이를 통해 개발자는 다양한 관계형 데이터베이스에 연결하고 SQL 쿼리를 실행할 수 있다.</p>

<h2 id="1-주요-특징">1. 주요 특징</h2>

<ul>
  <li>표준화된 인터페이스 : JDBC는 자바 플랫폼의 표준 부분으로, 일관된 API를 제공한다. 이를 통해 개발자는 특정 데이터 베이스에 종속되지 않는 코드를 작성 할 수 있다.</li>
  <li>데이터베이스 독립성 : JDBC는 다양한 데이터베이스와 호환된다. 개발자는 데이터베이스 종류에 관계없이 동일한 코드를 사용할 수 있다.</li>
</ul>

<h2 id="2-jdbc-구조">2. JDBC 구조</h2>

<p>JDBC는 크게 JDBC API와 JDBC Driver로 구성된다.</p>

<h3 id="21-jdbc-api">2.1 JDBC API</h3>

<p>JDBC API는 자바 애플리케이션에서 데이터베이스 작업을 수행하기 위한 인터페이스를 제공한다. 주요 구성요소는 다음과 같다.</p>

<ul>
  <li>DriverManager</li>
  <li>Connection</li>
  <li>Statement</li>
  <li>ResultSet</li>
</ul>

<h3 id="22-jdbc-driver">2.2 JDBC Driver</h3>

<p>JDBC Driver는 JDBC API의 구현체로, 특정 데이터베이스와의 통신을 담당한다. 주요 JDBC Driver 유형은 다음과 같다.</p>

<ul>
  <li>MySQL : com.mysql.jdbc*</li>
  <li>Oracle : oracle.jdbc*</li>
  <li>MS-SQL : con.microsoft.sqlserver.jdbc*</li>
</ul>

<h2 id="3-jdbc-동작-과정">3. JDBC 동작 과정</h2>

<h3 id="31-연결-과정-connection">3.1 연결 과정 (Connection)</h3>

<ol>
  <li><code class="language-plaintext highlighter-rouge">DriverManager.getConnection()</code> 메서드 호출</li>
  <li>적절한 JDBC Driver 선택</li>
  <li>선택된 Driver를 통해 데이터베이스에 연결</li>
  <li>Connection 객체 반환</li>
</ol>

<h3 id="32-데이터-조작-과정-dml-insertupdatedelete">3.2 데이터 조작 과정 (DML: insert/update/delete)</h3>

<ol>
  <li>Connection 객체에서 <code class="language-plaintext highlighter-rouge">createStatement()</code> 메서드 호출</li>
  <li>Statement 객체 생성</li>
  <li><code class="language-plaintext highlighter-rouge">executeUpdate()</code> 메서드를 통해 SQL 실행</li>
  <li>데이터베이스에서 결과 반환</li>
</ol>

<h3 id="33-데이터-조회-과정-select">3.3 데이터 조회 과정 (select)</h3>

<ol>
  <li>Connection 객체에서 <code class="language-plaintext highlighter-rouge">createStatement()</code> 메서드 호출</li>
  <li>Statement 객체 생성</li>
  <li><code class="language-plaintext highlighter-rouge">executeQuery()</code> 메서드를 통해 SQL 실행</li>
  <li>ResultSet 객체 반환</li>
  <li><code class="language-plaintext highlighter-rouge">next()</code>, <code class="language-plaintext highlighter-rouge">getXXX()</code> 메서드를 통해 데이터 접근</li>
</ol>

<h2 id="4-jdbc-주요-인터페이스">4. JDBC 주요 인터페이스</h2>

<h3 id="41-driver-인터페이스">4.1 Driver 인터페이스</h3>

<ul>
  <li>JDBC Driver의 기본 인터페이스</li>
  <li>데이터베이스와의 연결을 담당</li>
</ul>

<h3 id="42-connection-인터페이스">4.2 Connection 인터페이스</h3>

<ul>
  <li>데이터베이스와의 세션을 나타냄</li>
  <li>Statement 객체 생성, 트랜잭션 관리 등을 담당</li>
</ul>

<h3 id="43-statement-인터페이스">4.3 Statement 인터페이스</h3>

<ul>
  <li>SQL 문을 실행하고 결과를 반환하는 역할</li>
  <li>PreparedStatement, CallableStatement 등의 하위 인터페이스 존재</li>
</ul>

<h3 id="44-resultset-인터페이스">4.4 ResultSet 인터페이스</h3>

<ul>
  <li>SELECT문 실행하여 SQL 쿼리의 결과를 나타냄(서버에서 결과를 가져오는 객체일뿐 결과가 아니다!)</li>
  <li>결과 집합을 순회하고 데이터에 접근하는 메서드 제공</li>
</ul>

<h2 id="5-jdbc-사용-예시">5. JDBC 사용 예시</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 1. 데이터베이스 연결</span>
<span class="nc">Connection</span> <span class="n">con</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">"jdbc:mysql://localhost:3306/database"</span><span class="o">,</span> <span class="s">"username"</span><span class="o">,</span> <span class="s">"password"</span><span class="o">);</span>

<span class="c1">// 2. Statement 생성</span>
<span class="nc">Statement</span> <span class="n">stmt</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">createStatement</span><span class="o">();</span>

<span class="c1">// 3. SQL 실행</span>
<span class="nc">ResultSet</span> <span class="n">rs</span> <span class="o">=</span> <span class="n">stmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">(</span><span class="s">"SELECT * FROM users"</span><span class="o">);</span>

<span class="c1">// 4. 결과 처리</span>
<span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"age"</span><span class="o">);</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">name</span> <span class="o">+</span> <span class="s">" : "</span> <span class="o">+</span> <span class="n">age</span><span class="o">);</span>
<span class="o">}</span>

<span class="c1">// 5. 자원 해제</span>
<span class="n">rs</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="n">stmt</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</code></pre></div></div>

<h2 id="6-jdbc의-장점">6. JDBC의 장점</h2>

<ol>
  <li>데이터베이스 독립성: 다양한 데이터베이스에 일관된 방식으로 접근 가능</li>
  <li>간편한 데이터베이스 전환: Driver만 교체하면 다른 DBMS로 전환 가능</li>
  <li>표준화된 API: Java SE의 일부로 표준화되어 있어 안정적이고 지속적인 지원</li>
</ol>

<h2 id="7-주의사항">7. 주의사항</h2>

<ol>
  <li>연결 관리: 데이터베이스 연결은 비용이 많이 드는 작업이므로, 커넥션 풀 사용 고려</li>
  <li>보안: SQL Injection 등의 보안 위협에 대비하여 PreparedStatement 사용 권장</li>
  <li>예외 처리: SQLException 등 JDBC 관련 예외를 적절히 처리해야 함</li>
</ol>

<p>JDBC는 자바 기반 애플리케이션에서 데이터베이스 작업을 수행하기 위한 필수적인 기술이다. 적절한 사용을 통해 효율적이고 안전한 데이터베이스 접근이 가능하다.</p>]]></content><author><name>Nari-Lee</name></author><category term="Study" /><category term="Study" /><category term="Java" /><category term="SQL" /><category term="JDBC" /><summary type="html"><![CDATA[JDBC(Java Database Connectivity)에 대하여]]></summary></entry><entry><title type="html">블로그 계획</title><link href="http://localhost:4000/blog/Blog-Plan/" rel="alternate" type="text/html" title="블로그 계획" /><published>2024-08-14T00:00:00+09:00</published><updated>2024-08-15T09:26:00+09:00</updated><id>http://localhost:4000/blog/Blog-Plan</id><content type="html" xml:base="http://localhost:4000/blog/Blog-Plan/"><![CDATA[<p>GitHub Pages의 github.io 블로그 시작하기로 하였다.
블로그 계획을 한번 세워보았다. h2 태그로 제목을 쓰면
TOC 테이블로 오른쪽 사이드바에 보여줄 수 있다.</p>

<h2 id="1-기술-공부하기">1. 기술 공부하기</h2>

<p>공부하고 블로그 글로 게시하자.</p>

<h2 id="2-프로젝트-소개하기">2. 프로젝트 소개하기</h2>

<p>개인적으로 진행하는 프로젝트를 진행해보고
결과를 소개해보자.</p>]]></content><author><name>Nari-Lee</name></author><category term="Blog" /><category term="Blog" /><summary type="html"><![CDATA[GitHub github.io 블로그 계획.]]></summary></entry><entry><title type="html">github.io 블로그 시작</title><link href="http://localhost:4000/blog/Hello-world/" rel="alternate" type="text/html" title="github.io 블로그 시작" /><published>2024-08-14T00:00:00+09:00</published><updated>2024-08-15T07:05:00+09:00</updated><id>http://localhost:4000/blog/Hello-world</id><content type="html" xml:base="http://localhost:4000/blog/Hello-world/"><![CDATA[<p>GitHub Blog 서비스인 github.io 블로그 시작하기로 했다.
GitHub Blog 서비스의 이름은 Pages이다.</p>

<p>테마는 minimal-mistakes이다.</p>]]></content><author><name>Nari-Lee</name></author><category term="Blog" /><category term="Blog" /><summary type="html"><![CDATA[GitHub Blog 서비스인 github.io 블로그 시작하기로 했다. GitHub Blog 서비스의 이름은 Pages이다.]]></summary></entry><entry><title type="html">마크다운 문법 가이드</title><link href="http://localhost:4000/study/Markdown/" rel="alternate" type="text/html" title="마크다운 문법 가이드" /><published>2024-08-14T00:00:00+09:00</published><updated>2024-08-15T09:50:00+09:00</updated><id>http://localhost:4000/study/Markdown</id><content type="html" xml:base="http://localhost:4000/study/Markdown/"><![CDATA[<p>마크다운(markdown)이란 마크업 언어의 일종으로 흔히 github의 “README.md”에서 볼 수 있다.
확장자는 .md 또는 .markdown을 사용한다.</p>

<h2 id="1-제목-작성하기">1. 제목 작성하기</h2>

<p>제목은 ‘#’ 기호를 사용해 표현합니다. ‘#’의 개수에 따라 크기가 달라진다.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh"># 제목 1</span>
<span class="gu">## 제목 2</span>
<span class="gu">### 제목 3</span>
<span class="gu">#### 제목 4</span>
<span class="gu">##### 제목 5</span>
<span class="gu">###### 제목 6</span>
</code></pre></div></div>

<p>위와 같이 입력하면 아래처럼 표시된다:</p>

<h1 id="제목-1">제목 1</h1>
<h2 id="제목-2">제목 2</h2>
<h3 id="제목-3">제목 3</h3>
<h4 id="제목-4">제목 4</h4>
<h5 id="제목-5">제목 5</h5>
<h6 id="제목-6">제목 6</h6>

<h2 id="2-텍스트-강조하기">2. 텍스트 강조하기</h2>

<p>마크다운에서는 다음과 같이 텍스트를 강조할 수 있다.:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="ge">*이탤릭체*</span>는 별표 하나로 감싸기
<span class="gs">**굵은 글씨**</span>는 별표 두 개로 감싸기
~~취소선~~은 물결표 두 개로 감싸기
</code></pre></div></div>

<p>실제로 보이는 모습:</p>

<ul>
  <li><em>이탤릭체</em>는 별표 하나로 감싸기</li>
  <li><strong>굵은 글씨</strong>는 별표 두 개로 감싸기</li>
  <li><del>취소선</del>은 물결표 두 개로 감싸기</li>
</ul>

<h2 id="3-목록-만들기">3. 목록 만들기</h2>

<h3 id="순서-없는-목록">순서 없는 목록</h3>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">-</span> 첫 번째 항목
<span class="p">-</span> 두 번째 항목
<span class="p">  -</span> 하위 항목
<span class="p">  -</span> 또 다른 하위 항목
</code></pre></div></div>

<p>결과:</p>
<ul>
  <li>첫 번째 항목</li>
  <li>두 번째 항목
    <ul>
      <li>하위 항목</li>
      <li>또 다른 하위 항목</li>
    </ul>
  </li>
</ul>

<h3 id="순서-있는-목록">순서 있는 목록</h3>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> 첫 번째
<span class="p">2.</span> 두 번째
<span class="p">3.</span> 세 번째
</code></pre></div></div>

<p>결과:</p>
<ol>
  <li>첫 번째</li>
  <li>두 번째</li>
  <li>세 번째</li>
</ol>

<h2 id="4-링크-삽입하기">4. 링크 삽입하기</h2>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="nv">구글 홈페이지</span><span class="p">](</span><span class="sx">https://www.google.com</span><span class="p">)</span>로 이동하는 링크이다.
</code></pre></div></div>

<p>결과:
<a href="https://www.google.com">구글 홈페이지</a>로 이동하는 링크이다.</p>

<h2 id="5-이미지-넣기">5. 이미지 넣기</h2>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![</span><span class="nv">마크다운 로고</span><span class="p">](</span><span class="sx">https://markdown-here.com/img/icon256.png</span><span class="p">)</span>
</code></pre></div></div>

<p>결과:
<img src="https://markdown-here.com/img/icon256.png" alt="마크다운 로고" /></p>

<h2 id="6-코드-표시하기">6. 코드 표시하기</h2>

<p>인라인 코드는 백틱(`)으로 감싼다.</p>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>인라인 코드는 <span class="sb">`백틱`</span>으로 감싼다.
</code></pre></div></div>

<p>결과:
인라인 코드는 <code class="language-plaintext highlighter-rouge">백틱</code>으로 감싼다.</p>

<p>코드 블록은 백틱 세 개로 시작하고 끝낸다:</p>

<p>입력:</p>
<pre>
```python
def hello_world():
    print("Hello, Markdown!")
```
</pre>

<p>결과:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">hello_world</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Hello, Markdown!"</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="7-인용구-넣기">7. 인용구 넣기</h2>

<h3 id="7-1-인용하기">7-1. 인용하기</h3>

<p>인용문은 부등호(‘&gt;’)로 감싼다.</p>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; 첫번째 인용구 </span>
</code></pre></div></div>

<p>결과:</p>
<blockquote>
  <p>첫번째 인용구</p>
</blockquote>

<h3 id="7-2-단계적으로-인용하기">7-2. 단계적으로 인용하기</h3>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gt">&gt; 첫번째 인용구 </span>
<span class="gt">&gt;&gt; 두번째 인용구 </span>
<span class="gt">&gt;&gt;&gt; 세번째 인용구</span>
</code></pre></div></div>

<p>결과:</p>
<blockquote>
  <p>첫번째 인용구</p>
  <blockquote>
    <p>두번째 인용구</p>
    <blockquote>
      <p>세번째 인용구</p>
    </blockquote>
  </blockquote>
</blockquote>

<h2 id="8-구분선-넣기">8. 구분선 넣기</h2>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">---
</span></code></pre></div></div>

<p>결과:</p>

<hr />

<h2 id="9-표-만들기">9. 표 만들기</h2>

<p>입력:</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| 제목 1 | 제목 2 |
|--------|--------|
| 내용 1 | 내용 2 |
| 내용 3 | 내용 4 |
</code></pre></div></div>

<p>결과:
| 제목 1 | 제목 2 |
|——–|——–|
| 내용 1 | 내용 2 |
| 내용 3 | 내용 4 |</p>]]></content><author><name>Nari-Lee</name></author><category term="Study" /><category term="Blog" /><category term="GitHub pages" /><summary type="html"><![CDATA[마크다운 문법 가이드 (입력 방법 포함)]]></summary></entry></feed>